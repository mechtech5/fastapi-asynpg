"""Init

Revision ID: 7614142b54cf
Revises: 
Create Date: 2024-05-03 12:12:30.543222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7614142b54cf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('program', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('week_length', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('exam_cert', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tuition', sa.Float(), nullable=True),
    sa.Column('are_books_included', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_courses_uuid'), 'courses', ['uuid'], unique=True)
    op.create_table('students',
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('street_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('state_province', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('zip_postalcode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('home_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cell_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_high_school_graduate', sa.Boolean(), nullable=True),
    sa.Column('school_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('school_state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('school_dates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_students_email'), 'students', ['email'], unique=True)
    op.create_index(op.f('ix_students_uuid'), 'students', ['uuid'], unique=True)
    op.create_table('users',
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reset_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=True)
    op.create_table('citizenship',
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('social_security_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dob', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country_of_citizenship', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('place_of_birth', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('alien_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_english_native_language', sa.Boolean(), nullable=True),
    sa.Column('other_languages', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('student_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_citizenship_uuid'), 'citizenship', ['uuid'], unique=True)
    op.create_table('emergency_contacts',
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('street_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('state_province', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('zip_postalcode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('home_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cell_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('relationship', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('student_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_emergency_contacts_email'), 'emergency_contacts', ['email'], unique=True)
    op.create_index(op.f('ix_emergency_contacts_uuid'), 'emergency_contacts', ['uuid'], unique=True)
    op.create_table('institutional',
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('hear_about_ntai', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('recommended_by', sa.Boolean(), nullable=True),
    sa.Column('if_yes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('agency_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('counselor_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('desired_dates', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('courses_interested', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('list_certifications', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('institutional_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('institutional_phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('student_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_institutional_uuid'), 'institutional', ['uuid'], unique=True)
    op.create_table('survey',
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('enroll_at_ntai', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('your_time_here', sa.Boolean(), nullable=True),
    sa.Column('nondiscriminatory', sa.Boolean(), nullable=True),
    sa.Column('other', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('student_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_survey_uuid'), 'survey', ['uuid'], unique=True)
    op.create_table('work_experience',
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('current_work_status', sa.Boolean(), nullable=True),
    sa.Column('other', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('most_recent_employer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('position', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dates_employed_from', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('brief_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('current_timestamp(0)'), nullable=False),
    sa.Column('student_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_work_experience_uuid'), 'work_experience', ['uuid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_work_experience_uuid'), table_name='work_experience')
    op.drop_table('work_experience')
    op.drop_index(op.f('ix_survey_uuid'), table_name='survey')
    op.drop_table('survey')
    op.drop_index(op.f('ix_institutional_uuid'), table_name='institutional')
    op.drop_table('institutional')
    op.drop_index(op.f('ix_emergency_contacts_uuid'), table_name='emergency_contacts')
    op.drop_index(op.f('ix_emergency_contacts_email'), table_name='emergency_contacts')
    op.drop_table('emergency_contacts')
    op.drop_index(op.f('ix_citizenship_uuid'), table_name='citizenship')
    op.drop_table('citizenship')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_students_uuid'), table_name='students')
    op.drop_index(op.f('ix_students_email'), table_name='students')
    op.drop_table('students')
    op.drop_index(op.f('ix_courses_uuid'), table_name='courses')
    op.drop_table('courses')
    # ### end Alembic commands ###
